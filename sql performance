-- == 多次重覆使用的 table ==
select
  pj.PROJECT_ID,
  pm.EM_NAME || '/' || pm.EM_NICKNAME || '[' || pm.EM_EXT || ']' PM_DISPLAY,
  sales.EM_NAME || '/' || sales.EM_NICKNAME || '[' || sales.EM_EXT || ']' SALES_DISPLAY,
  tc.EM_NAME || '/' || tc.EM_NICKNAME || '[' || tc.EM_EXT || ']' TC_DISPLAY
from ERD.PROJECT_INFO pj,
     EMS.EMPLOYEE_V pm,
	 EMS.EMPLOYEE_V sales,
	 EMS.EMPLOYEE_V tc
where pj.SALES = sales.LOGIN_ID(+)
and pj.PM = pm.LOGIN_ID(+)
and pj.PROJECT_TC = tc.LOGIN_ID(+)
;
-- 建議使用 with
with emp as (
  select EM_NO, LOGIN_ID, EM_NAME || '/' || EM_NICKNAME || '[' || EM_EXT || ']' EM_DISPLAY
  from EMS.EMPLOYEE_V
)
select
  pj.PROJECT_ID,
  pm.EM_DISPLAY PM_DISPLAY,
  sales.EM_DISPLAY SALES_DISPLAY,
  tc.EM_DISPLAY TC_DISPLAY
from ERD.PROJECT_INFO pj, emp pm, emp sales, emp tc
where pj.SALES = sales.LOGIN_ID(+)
and pj.PM = pm.LOGIN_ID(+)
and pj.PM = tc.LOGIN_ID(+)
;

-- == 避免在 select 語句做 sub-query ==
---- 在 select上的 sub-query 可想成每 row 皆會執行一次 sub-query，當資料多時容易讓效能變很差
== X ==
select
  PROJECT_ID,
  CUST_NO,
  (select CUST_CODE from ERP.CUST_INFO where CUST_NO = pj.CUST_NO) CUST_CODE,
  (select CUST_NAME from ERP.CUST_INFO where CUST_NO = pj.CUST_NO) CUST_NAME
from ERD.PROJECT_INFO pj
;
-- 建議使用 join
select
  PROJECT_ID,
  cust.CUST_CODE,
  cust.CUST_NAME
from ERD.PROJECT_INFO pj, ERP.CUST_INFO cust
where pj.CUST_NO = cust.CUST_NO(+)

-- == 用 >= 替代 > ==
---- 一般來說, 若能寫 >= 的話，效能會比 > 來的好 (會使用到index)

-- == 用 UNION ALL 還是 UNION ==
---- 若確定資料不會重覆，請用 UNION ALL 效能比較好 (因為不會像 UNION 會做 DISTINCT)


-- == 多表 join 的順序 ==
---- Oracle 是從下到上處理 where 字句的查詢條件，所以 join 的條件寫在其他 where 條件前，將可過濾掉最多 record 的條件寫在最後面
---- Oracle 是從右到左處理 from 子句中的表，所以 join 時，將最少 record 的表放在最後
